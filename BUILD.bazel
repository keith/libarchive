load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")

bool_flag(
    name = "use_mbedtls",
    build_setting_default = False,
)

config_setting(
    name = "use_mbedtls_setting",
    flag_values = {":use_mbedtls": "true"},
    visibility = ["//:__subpackages__"],
)

cc_library(
    name = "config_h",
    hdrs = ["xplat_config.h"],
    defines = select({
        "@platforms//os:linux": [
            "HAVE_FUTIMESAT",
            "HAVE_LINUX_FS_H",
            "HAVE_LINUX_MAGIC_H",
            "HAVE_LINUX_TYPES_H",
            "HAVE_PATHS_H",
            "HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC",
            "HAVE_SYS_XATTR_H",
        ],
        "//conditions:default": [],
    }) + select({
        "@platforms//os:windows": [
            "gid_t=short",
            "id_t=\"unsigned long\"",
            "uid_t=short",
        ],
        "//conditions:default": [
            "HAVE_SYS_TYPES_H",
        ],
    }) + select({
        "@platforms//os:windows": [
            "HAVE__FSEEKI64",
            "HAVE_CTIME_S",
            "HAVE_IO_H",
            "HAVE_LOCALTIME_S",
            "HAVE_LSTAT_EMPTY_STRING_BUG",
            "HAVE_STAT_EMPTY_STRING_BUG",
            "HAVE_STRNCPY_S",
            "HAVE_SYS_UTIME_H",
            "HAVE_WINCRYPT_H",
            "HAVE_WINDOWS_H",
            "HAVE_WINIOCTL_H",
        ],
        "//conditions:default": [],
    }) + select({
        "@platforms//os:windows": [],
        "//conditions:default": [
            "HAVE_CHROOT",
            "HAVE_CTIME_R",
            "HAVE_DIRFD",
            "HAVE_FCHDIR",
            "HAVE_FCHMOD",
            "HAVE_FCHOWN",
            "HAVE_FCNTL",
            "HAVE_FDOPENDIR",
            "HAVE_FGETXATTR",
            "HAVE_FLISTXATTR",
            "HAVE_FORK",
            "HAVE_FSETXATTR",
            "HAVE_FSTATAT",
            "HAVE_FSTATFS",
            "HAVE_FSTATVFS",
            "HAVE_FUTIMENS",
            "HAVE_FUTIMES",
            "HAVE_GETEUID",
            "HAVE_GETGRGID_R",
            "HAVE_GETGRNAM_R",
            "HAVE_GETPWNAM_R",
            "HAVE_GETPWUID_R",
            "HAVE_GETXATTR",
            "HAVE_GMTIME_R",
            "HAVE_GRP_H",
            "HAVE_LANGINFO_H",
            "HAVE_LCHOWN",
            "HAVE_LGETXATTR",
            "HAVE_LINK",
            "HAVE_LISTXATTR",
            "HAVE_LLISTXATTR",
            "HAVE_LOCALTIME_R",
            "HAVE_LSETXATTR",
            "HAVE_LSTAT",
            "HAVE_LUTIMES",
            "HAVE_MKFIFO",
            "HAVE_MKNOD",
            "HAVE_MKSTEMP",
            "HAVE_NL_LANGINFO",
            "HAVE_OPENAT",
            "HAVE_PIPE",
            "HAVE_POLL",
            "HAVE_POLL_H",
            "HAVE_POSIX_SPAWNP",
            "HAVE_PWD_H",
            "HAVE_READLINK",
            "HAVE_READLINKAT",
            "HAVE_REGEX_H",
            "HAVE_SELECT",
            "HAVE_SIGACTION",
            "HAVE_SPAWN_H",
            "HAVE_STATFS",
            "HAVE_STAVTFS",
            "HAVE_STRERROR_R",
            "HAVE_STRUCT_STAT_ST_BLKSIZE",
            "HAVE_STRUCT_TM_TM_GMTOFF",
            "HAVE_SYMLINK",
            "HAVE_SYS_IOCTL_H",
            "HAVE_SYS_MOUNT_H",
            "HAVE_SYS_POLL_H",
            "HAVE_SYS_SELECT_H",
            "HAVE_SYS_UTSNAME_H",
            "HAVE_SYS_VFS_H",
            "HAVE_SYS_WAIT_H",
            "HAVE_TIMEGM",
            "HAVE_UNISTD_H",
            "HAVE_UNSETENV",
            "HAVE_UTIMENSAT",
            "HAVE_UTIMES",
            "HAVE_VFORK",
            "LSTAT_FOLLOWS_SLASHED_SYMLINK",
            "STRERROR_R_CHAR_P",
        ],
    }) + select({
        "@platforms//os:osx": [
            "HAVE_STRUCT_STAT_ST_BIRTHTIME",
            "HAVE_SYS_CDEFS_H",
        ],
        "//conditions:default": [],
    }) + select({
        "//:use_mbedtls_setting": [
            "HAVE_LIBMBEDCRYPTO",
            "HAVE_MBEDTLS_AES_H",
            "HAVE_MBEDTLS_MD_H",
            "HAVE_MBEDTLS_PKCS5_H",
        ],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
)
